<link rel="stylesheet" href="//code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css"> 
<!--<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">-->
<!--<script src="//code.jquery.com/jquery-1.10.2.js"></script>-->
<!--<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.17.0/vis.min.js"></script>

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Explore Wiki</h1>
    <p class="lead">You can start building relationship graph by entering starting person.</p>
</div>

@model ExploreWiki.ViewModel.PersonViewModel


@using (Html.BeginForm())
{
    {
        ViewBag.Title = "Examples - Julius Caesar, Charlemagne, Stefan Nemanja";
    }

    <h2>@ViewBag.Title.</h2>
    <h3>@ViewBag.Message</h3>
    <h4>Generation took - @ViewBag.GenerationTook</h4>

      @Html.TextBoxFor(m => m.InputName)
    <input type="submit" value="Search"/>
    //pass JSONs on client side as container div data-attributes
    <div id="container"
         data-personnamesjson="@ViewBag.personsJson"
         data-personsconnectionsjson="@ViewBag.PersonsConnectionsJson"
         data-searchterm="@ViewBag.InputName">


        <div id="mynetwork" style="height:1000px; float:left; border: 1px; width: 800px">
            <div class="vis-network" style="height:1000px; touch-action: pan-y; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);">
                <canvas height="800" style="height:1000px;resize: both;touch-action: none; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></canvas>
            </div>
        </div>

        <div id="wikiboxshow" style="border: 1px; float:left;width:200px"></div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function() {
        $("#InputName").autocomplete({
            source: '@Url.Action("Autocomplete","Home")',
            appendTo: "#container"
        });
    })
</script>

<script>
    // TODO: This is really not the right way to model this MVC stuff but for now it does the job.
    // create an array with nodes
    var nodes = new vis.DataSet([]);
    @foreach (KeyValuePair<string, ExploreWiki.Models.Person> name in ViewBag.PersonNames)
    {
        @:nodes.add([ {id: @name.Value.Id, label: '@name.Value.NormalizedName', color: '@name.Value.GetRGBColor' }]);
    }

    // create an array with edges
    var edges = new vis.DataSet([]);
    @foreach (ExploreWiki.Models.Relation relation in ViewBag.PersonConnections)
    {
        @:edges.add([{from: @relation.PersonFrom.Id, to: @relation.PersonTo.Id, label: '@relation.RelationName', arrows: 'to'}])
    }

    var searchTerm = "";
    @if (!String.IsNullOrEmpty(ViewBag.InputName))
    {
        @:var searchTerm = "@ViewBag.InputName";
    }
</script>
